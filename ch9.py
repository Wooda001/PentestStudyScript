questions = ['Which class of attack targets relational databases and can be used to bypass authentication systems; reveal, alter, or destroy data; or even obtain system-level shell access, given the right conditions? It typically relies on a lack of filtering of escape characters in user input or a lack of sufficient control parameters applied to user input, and is best mitigated through the use of parameterized queries.\n\nA.  HTML injection\n\nB.  Code injection\n\nC.  SQL injection\n\nD.  Parameter pollution', 'Which category of vulnerability is present when a web application provides access to information based solely on user-provided input, as demonstrated in the following sample URL?\n https://127.0.0.1/salesrecords?salesreceipt=11532 \nA.  Command injection\n\nB.  Reflected cross-site scripting\n\nC.  Insecure direct object reference\n\nD.  Clickjacking', 'Which category of web vulnerability occurs when web applications accept untrusted input from users before leading them to a new page?\n\nA.  Remote file inclusion\n\nB.  Unvalidated redirect\n\nC.  Directory traversal\n\nD.  Cross-site request forgery', 'Which client-side attack is part of a class of injection attack that embeds malicious code into a website, frequently one trusted by the victim? In this particular variety, user-provided data is stored on a website that then triggers the execution of code—usually a string of JavaScript.\n\nA.  DOM-based XSS\n\nB.  Local file inclusion\n\nC.  Cookie manipulation\n\nD.  Persistent XSS', 'Which of the following is best defined as a software vulnerability stemming from developer interfaces being left available to remote users, usually either unintentionally through a failure to disable the feature or intentionally as a backdoor or tool meant to make administration simpler?\n\nA.  Hard-coded authorization credentials\n\nB.  Unauthorized function or API use\n\nC.  Storage of sensitive information in the DOM\n\nD.  Unsigned code\n','Consider the following scenario for the next three questions:\n\nA user has navigated to the following URL during their daily work:\n\nHTTPS://EXAMPLE.COM/ACCOUNT.CREATE?ACCT=STEVE&CONTEXT=READONLY\n\nAn attacker with knowledge of how the web applicationfunctions chooses to trick the user into visiting the following page with a link included in a phishing e-mail:\n\nHTTPS://EXAMPLE.COM/ACCOUNT.CREATE?ACCT=ATTACKER&CONTEXT=ADMIN \n\n Based on the URL, what is the likely intended purpose of the page the user first visited?\n\nA.  To create a new web app account with the username Steve and read-only permissions\n\nB.  To create a new user on the underlying host with the username Steve and read-only access to the /tmp directory\n\nC.  To create a new user on the system’s database with administrative privileges under the username attacker\n\nD.  To create a new web app account with the username attacker with read-only privileges', 'Based on the URL, what is the attacker’s likely intent with the second URL?\n\nA.  To create a new user on the underlying host with the username Steve and read-only access to the /tmp directory\n\nB.  To create a new user on the system’s database with administrative privileges under the username Steve\n\nC.  To create a new web app account with the username Attacker and administrative privileges\n\nD.  To create a new web app account with the username Steve and read-only permissions', 'What vulnerabilities orattacks have been chained together to lead to the creation of the attacker’s account? (Choose two.)\n\nA.  CSRF\n\nB.  Insecure direct object reference\n\nC.  Code injection\n\nD.  Directory traversal', 'In this first screenshot, a drop-down box is used to select a user ID number for which the user’s first and last names are displayed.\n\nImages\n\nWith some modifications to the POST request, theoutput shown here is obtained.\n\nImages\n\nWhat method of web application attack was leveraged here?\n\nA.  XSS\n\nB.  Session hijacking\n\nC.  SQL injection\n\nD.  Clickjacking', 'In the manual browser-based attack shown here on the popular DVWA (available at http://dvwa.co.uk under GPL), any attempt at uploading malicious JavaScript to the server is met with an HTTP 400 error. After modifying the URL directly however, an attacker is able to trick the browser into directlyexecuting JavaScript code without the server being aware. What type of attack is being executed here?\n\nImages\n\nA.  Reflected XSS\n\nB.  DOM-based XSS\n\nC. HTML injection\n\nD.  HTTP parameter pollution', 'Consider the following screenshot from the DVWA. After execution, the page reveals the user context under which the web application is running. What type of attack has been executed here?\n\nImages\n\nA.  HTML injection\n\nB.  Command injection\n\nC.  Persistent XSS\n\nD.  Session hijacking', 'Consider the modified HTTP request shown in the following illustration. What type of attack is being attempted?\n\nImages\n\nA.  Local file inclusion\n\nB.  Certificate pinning\n\nC.  CSRF\n\nD.  Remote file inclusion', "While browsing PHP files via a local file inclusion (LFI) vulnerability you’ve discovered, you see the following lines in a function that appears to handle database queries:\n\ndefine('DB_USERNAME', 'seth');\ndefine('DB_PASSWORD', 'GoCubs21!@');\n\nThis information disclosure is an example of what insecure coding practice?\n\nA.  Hard-coded credentials\n\nB.  Comments in source code\n\nC.Race condition\n\nD.  Verbose error handling\n\nConsider the following illustration for the next two questions:\n\nImages", 'Of the choices given, what vulnerability in this component of the DVWA is being exploited?\n\nA.  XSS\n\nB.  Localfile inclusion\n\nC.  Code injection\n\nD.  Cookie manipulation', 'Consider theinformation revealed. How could this help an attacker expand their access to the system? (Choose two.)\n\nA.  The contents of the /etc/passwd file identify potential phishing target e-mail addresses.\n\nB.  Knowing the shells of user accounts will make it easier to crack their passwords.\n\nC.  Revealing the list of users in /etc/passwd could allow an attacker to identify standard user accounts in addition to the many nologin shell system accounts, making it possible to target them for brute forcing or other means of compromise.\n\nD.  The URL string also demonstrates directory traversal, allowing the attacker to read any file on the system that can be read in the context of the user running the web server.']


answers = ['C', 'C', 'B', 'D', 'B', 'A', 'C', 'AB', 'C', 'B', 'B', 'D', 'A', 'B', 'CD']